dist: xenial # Ubuntu 16.04
language: node_js
node_js:
  - 10

before_install:
  - 'sudo apt-get install jq'

  # Get Staging Token
  - staging_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_staging\",\"password\":\"$domain_api_password_staging\"}" $domain_api_url_staging/auth | jq '.accessToken' | tr -d '"')
  - |
    if [[ "$staging_token" = "null" ]]; then
      echo "No staging token"
      travis_terminate 1
    else
      echo $staging_token
    fi

  # Get Staging Domains
  - 'curl -H "Authorization: $staging_token" $domain_api_url_staging/get-terraform-domains > sites-staging-response.json'
  - sites_staging=$(cat sites-staging-response.json | jq '.domains')
  - records_staging=$(cat sites-staging-response.json | jq '.records')
  - |
    if [[ "$sites_staging" != "null" && "$records_staging" != "null" ]]; then
      echo $sites_staging > sites-staging.json
      echo $records_staging > records-staging.json
    else
      echo "No staging domains"
      travis_terminate 1
    fi
  - cat sites-staging.json | jq '.'
  - cat records-staging.json | jq '.'

  # - travis_terminate 0

  # Get Production Token
  # - production_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_production\",\"password\":\"$domain_api_password_production\"}" $domain_api_url_production/auth | jq '.accessToken' | tr -d '"')
  # - |
  #   if [[ "$production_token" = "null" ]]; then
  #     echo "No production token"
  #     travis_terminate 1
  #   else
  #     echo $production_token
  #   fi

  # - 'curl -H "Authorization: $production_token" $domain_api_url_production/get-terraform-domains1 > sites-production.json'
  # - 'curl -H "Authorization: $production_token" $domain_api_url_production/domains/bf3740c2-6980-4e52-9d32-cb1a5bfb6d14no > records-production.json'

after_success:
  - staging_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_staging\",\"password\":\"$domain_api_password_staging\"}" $domain_api_url_staging/auth | jq '.accessToken' | tr -d '"')
  - |
    if [[ "$staging_token" = "null" ]]; then
      echo "No staging token"
    else
      sites_staging=$(jq -c  '.' sites-staging.json)
      curl -X POST -d "{\"domains\":\"$sites_staging\",\"status\":\"success\",\"branch\":\"$TRAVIS_BRANCH\",\"tag\":\"$TRAVIS_TAG\"}"  -H "Authorization: $staging_token" $domain_api_url_staging/travis-webhook
    fi

after_failure:
  - staging_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_staging\",\"password\":\"$domain_api_password_staging\"}" $domain_api_url_staging/auth | jq '.accessToken' | tr -d '"')
  - |
    if [[ "$staging_token" = "null" ]]; then
      echo "No staging token"
    else
      sites_staging=$(jq -c  '.' sites-staging.json)
      curl -X POST -d "{\"domains\":\"$sites_staging\",\"status\":\"failure\",\"branch\":\"$TRAVIS_BRANCH\",\"tag\":\"$TRAVIS_TAG\"}"  -H "Authorization: $staging_token" $domain_api_url_staging/travis-webhook
      echo $staging_token
    fi

jobs:
  include:
    - stage: terraform plan
      if: type = push AND branch = main
      script:
        - cat sites-staging.json | jq '.'
        - cat records-staging.json | jq '.'
        - cat sites-production.json | jq '.'
        - cat records-production.json | jq '.'