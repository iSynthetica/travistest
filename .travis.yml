dist: xenial # Ubuntu 16.04
language: node_js
node_js:
  - 10

before_install:
  - 'sudo apt-get install jq'

  - staging_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_staging\",\"password\":\"$domain_api_password_staging\"}" $domain_api_url_staging/auth | jq '.accessToken' | tr -d '"')
  - |
    if [[ "$staging_token" = "null" ]]; then
      travis_terminate 1
    else
      echo $staging_token
    fi
  - 'curl -H "Authorization: $staging_token" $domain_api_url_staging/get-terraform-domains > sites-staging.json'
  - 'curl -H "Authorization: $staging_token" $domain_api_url_staging/get-terraform-domain-records > records-staging.json'

  - production_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_production\",\"password\":\"$domain_api_password_production\"}" $domain_api_url_production/auth | jq '.accessToken' | tr -d '"')
  - |
    if [[ "$production_token" = "null" ]]; then
      travis_terminate 1
    else
      echo $staging_token
    fi
    
  - 'curl -H "Authorization: $production_token" $domain_api_url_production/get-terraform-domains1 > sites-production.json'
  - 'curl -H "Authorization: $production_token" $domain_api_url_production/domains/bf3740c2-6980-4e52-9d32-cb1a5bfb6d14no > records-production.json'

  - req_result=$(cat sites-production.json | jq ' if .code != null then "error" else "success" end')
  - echo $req_result

  - req_result=$(cat records-production.json | jq ' if .code != null then "error" else "success" end')
  - echo $req_result
  
  - |
    if [ "$req_result" = "error" ]; then
      travis_terminate 1
    else
      echo $req_result
    fi

after_success:
  - sites_staging=$(jq -Rs  '.' sites-staging.json)
  - staging_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_staging\",\"password\":\"$domain_api_password_staging\"}" $domain_api_url_staging/auth | jq '.accessToken' | tr -d '"')
  - 'curl -X POST -d "{\"domains\":$sites_staging,\"status\":\"success\"}"  -H "Authorization: $staging_token" $domain_api_url_staging/travis-webhook'

after_failure:
  - sites_staging=$(jq -Rs  '.' sites-staging.json)
  - staging_token=$(curl -X POST -d "{\"username\":\"$domain_api_username_staging\",\"password\":\"$domain_api_password_staging\"}" $domain_api_url_staging/auth | jq '.accessToken' | tr -d '"')
  - 'curl -X POST -d "{\"domains\":$sites_staging,\"status\":\"failure\"}"  -H "Authorization: $staging_token" $domain_api_url_staging/travis-webhook'

jobs:
  include:
    - stage: terraform plan
      if: type = push AND branch = main
      script:
        - echo $staging_token
        - echo $production_token
        - cat sites-staging.json | jq '.'
        - cat records-staging.json | jq '.'
        - cat sites-production.json | jq '.'
        - cat records-production.json | jq '.'